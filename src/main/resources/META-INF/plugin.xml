<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2011-2014 Julien Nicoulaud <julien.nicoulaud@gmail.com>
  ~ Copyright (c) 2015 Vladimir Schneider <vladimir.schneider@gmail.com>
  ~
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<idea-plugin version="2" url="http://github.com/vsch/idea-multimarkdown">
    <id>com.vladsch.idea.multimarkdown</id>
    <name>MultiMarkdown</name>
    <category>Custom Languages</category>
    <vendor url="http://github.com/vsch" email="vladimir.schneider@gmail.com">Vladimir Schneider</vendor>
    <depends>com.intellij.modules.lang</depends>

    <description><![CDATA[
        <div xmlns="http://www.w3.org/1999/html">
            <img src="https://raw.githubusercontent.com/vsch/idea-multimarkdown/master/assets/images/ScreenShot_source_preview_Small.png" border="0" width="270" height="135" alt="Screenshot">
            <p>
                <strong><a href="http://daringfireball.net/projects/markdown"><span style="color:#30A0D8">Markdown</span></a> language support for IntelliJ platform.</strong>
                <br>With GitHub Flavoured Markdown extensions and GitHub style formatting. HTML Preview and HTML Text tabs.
                <br><strong style="color:#30A0D8">The only markdown plugin for more than just previewing. Features include link address completions, refactoring, and validation. Works with GitHub wiki and main repository files.</strong>
            </p>
            <p><strong>Plugin website: <a href="http://vladsch.com/product/multimarkdown"><span style="color:#30A0D8">idea-multimarkdown Enhanced Edition</span></a></strong></p>
            <p><strong>Bug tracking & feature requests: <a href="https://github.com/vsch/idea-multimarkdown/issues"><span style="color:#30A0D8">MultiMarkdown GitHub Issues</span></a></strong></p>
            <p><strong>Documentation: <a href="https://github.com/vsch/idea-multimarkdown/wiki"><span style="color:#30A0D8">MultiMarkdown GitHub Wiki page.</span></a></strong></p>
        </div>
        ]]></description>

    <version>1.2.3</version>
    <idea-version since-build="139.1603"/>
    <change-notes><![CDATA[
        <h3>1.2.3.1 - Bug Fixes and Enhancements</h3>
        <h4>Basic Edition &amp; Enhanced</h4>
        <ul>
            <li>Update Sources for latest Kotlin compatibility</li>
            <li>Add Pegdown timeout exception handling to prevent ide hanging during indexing</li>
            <li>Change default pegdown parse timeout to 200 ms to prevent erroneous   parsing from hanging the UI.</li>
        </ul>
        <h3>1.2.3 - Bug Fixes and Enhancements</h3>
        <h4>Basic Edition &amp; Enhanced</h4>
        <ul>
            <li>Change: default JavaFX preview font order to have Helvetica before Arial, cleaner text rendering.</li>
            <li>Fix #73: self referencing links with 'Show Modified' not selected do not generate correct HTML.</li>
            <li>Change: update JavaFX preview to new GitHub style, wider pages.</li>
            <li>Add: inspections when wiki pages are linked with file extension, they will display raw text not rendered HTML</li>
            <li>Fix: anchor links markdown extension was always enabled when 'Use Old Preview' was selected, regardless of preferences settings</li>
            <li>Add: fork and raw GitHub link to be recognized</li>
            <li>Add: line icon to show multiple resolved targets</li>
            <li>Change: preferences for the plugin are now split between local, non-roaming persistence in multimarkdown.local.xml and shared roaming persistence in multimarkdown.shared.xml. Preferences from multimarkdown.xml are migrated to new files and the file is deleted.</li>
        </ul>
        <h4>Enhanced Edition</h4>
        <ul>
            <li>Change: new implementation of file link resolving logic handles a full set of GitHub idiosyncrasies for relative links, raw/blob access, absolute https:// links, file extensions and case sensitivity.</li>
            <li>Add: new annotation inspections for common errors in link resolution</li>
            <li>New: modified HTML now has all links as URI's during rendering with preference to GitHub repository file when available, fallback to local file://</li>
            <li>Fix: added validation for invalid PsiElements during refactoring to prevent exceptions</li>
            <li>Fix: all link refactoring for file move/rename adjusts affected link according to GitHub rules</li>
            <li>Add: warning annotation in text editor, link color and image border in preview when a link target is not on GitHub according to its status</li>
            <li>Add: intention to change relative to absolute link addresses and vice-versa</li>
            <li>Add: validation of absolute links that look like they are targeting files in the same repository as the containing file</li>
            <li>Add: navigation line items for absolute links that resolve to files</li>
            <li>Add: absolute address link completions and link completions based on extensions other than markdown for wiki and explicit and images for image links, just add file:// or https:// in front to get url completions and an extension without a file name to get extension based completions. <code>https://.java</code> will show java files with https:// absolute link address.</li>
            <li>Fix #71: license information is now saved in multimarkdown.local.xml and is marked as non-roaming</li>
            <li>Add: handle relative image links in wiki pages must resolve to raw file access in main repository default behavior and validation</li>
            <li>Add: automatically change wiki link to explicit link if target file is moved out of wiki link access range</li>
            <li>Add: refactoring now keeps link format as it was before, if it was absolute or page relative.</li>
        </ul>
        <h3>1.2.2 - Bug Fixes and Enhancements</h3>
        <h4>Basic Edition &amp; Enhanced</h4>
        <ul>
            <li>Add a change to quick fix on an unresolved link will apply the same change to all links that match the link being modified.</li>
            <li>Add annotation if wiki link ends in .md, with quick fix to remove .md extension</li>
            <li>Fix #60: use another class for string to input stream conversion that is universally support across os types.</li>
            <li>Fix #62: Plugin exhausted thread resources if a lot of projects were open</li>
            <li>Fix #63: Unresolved links were not always highlighted as error</li>
            <li>Fix #65: threading issues causing slow preview update and other intermittent errors.</li>
            <li>Fix #67: change message for not finding javafx from warning to info.</li>
            <li>Fix #70: closed to to task list items with capital x <code>- [X]</code> would not render correctly in the WevView preview.</li>
            <li>Fix link resolution did not work if non-default Markdown extension was used on Wiki pages</li>
            <li>Fix link resolution in preview to match the rules for markdown source</li>
            <li>Fix wiki link with multiple matched targets would not resolve according to sort order</li>
            <li>Fix wiki link with multiple matched targets would show quick fix to rename unreachable targets</li>
            <li>Fix wiki links with subdirectory references did not show annotation popup or quick fix to remove directory</li>
            <li>Fix buy license button in settings navigated to the get trial license page instead of the full license page.</li>
        </ul>
        <h4>Enhanced Edition</h4>
        <ul>
            <li>Add validation for relative links accessing wiki raw content by using the Wiki page link with extension.</li>
            <li>Add validation of all explicit relative links from the main repository to wiki files.</li>
            <li>Add warning when a file is a target of a link but is not on GitHub.</li>
            <li>Fix #64: class cast exception in explicit link.</li>
            <li>Fix link errors in source, preview and click actions are now in agreement</li>
            <li>Fix link resolution was not always consistent with GitHub</li>
            <li>Fix license registration failing in version 133.1711 for lack of methods in some classes.</li>
            <li>Fix intention to change wiki link to explicit and vice-versa.</li>
        </ul>
        ]]></change-notes>

    <project-components>
        <!-- Plugin's project components -->
        <component>
            <implementation-class>com.vladsch.idea.multimarkdown.MultiMarkdownProjectComponent</implementation-class>
        </component>
    </project-components>

    <application-components>
        <!-- Add your application components here -->
        <component>
            <implementation-class>com.vladsch.idea.multimarkdown.MultiMarkdownPlugin</implementation-class>
        </component>
    </application-components>

    <!-- @formatter:off -->
    <extensions defaultExtensionNs="com.intellij">
        <!--<externalAnnotator language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.annotator.MultiMarkdownAnnotator"/>-->
        <!--<fileEditorProvider implementation="com.vladsch.idea.multimarkdown.editor.MultiMarkdownHtmlEditorProvider"/>-->
        <!--<fileEditorProvider implementation="com.vladsch.idea.multimarkdown.editor.MultiMarkdownPreviewEditorProvider"/>-->
        <additionalTextAttributes scheme="Darcula" file="com/vladsch/idea/multimarkdown/colorSchemes/MultiMarkdownDarcula.xml"/>
        <additionalTextAttributes scheme="Default" file="com/vladsch/idea/multimarkdown/colorSchemes/MultiMarkdownDefault.xml"/>
        <annotator language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.annotator.MultiMarkdownAnnotator"/>
        <applicationConfigurable instance="com.vladsch.idea.multimarkdown.settings.MultiMarkdownGlobalSettingsConfigurable"/>
        <applicationService serviceInterface="com.vladsch.idea.multimarkdown.settings.MultiMarkdownGlobalSettings" serviceImplementation="com.vladsch.idea.multimarkdown.settings.MultiMarkdownGlobalSettings"/>
        <applicationService serviceInterface="com.vladsch.idea.multimarkdown.settings.MultiMarkdownNonRoamingGlobalSettings" serviceImplementation="com.vladsch.idea.multimarkdown.settings.MultiMarkdownNonRoamingGlobalSettings"/>
        <codeStyleSettingsProvider implementation="com.vladsch.idea.multimarkdown.language.MultiMarkdownCodeStyleSettingsProvider"/>
        <colorSettingsPage implementation="com.vladsch.idea.multimarkdown.highlighter.MultiMarkdownColorSettingsPage"/>
        <completion.contributor language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.language.MultiMarkdownCompletionContributor"/>
        <fileEditorProvider implementation="com.vladsch.idea.multimarkdown.editor.MultiMarkdownFxPreviewEditorProvider"/>
        <fileEditorProvider implementation="com.vladsch.idea.multimarkdown.editor.MultiMarkdownFxHtmlEditorProvider"/>
        <fileTypeFactory implementation="com.vladsch.idea.multimarkdown.MultiMarkdownFileTypeFactory"/>
        <gotoSymbolContributor implementation="com.vladsch.idea.multimarkdown.language.MultiMarkdownChooseByNameContributor"/>
        <lang.commenter language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.language.MultiMarkdownCommenter"/>
        <!--<lang.documentationProvider language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.documentation.MultiMarkdownDocumentationProvider"/>-->
        <lang.findUsagesProvider language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.language.MultiMarkdownFindUsagesProvider"/>
        <lang.namesValidator language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.language.MultiMarkdownNamesValidator"/>
        <lang.parserDefinition language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.parser.MultiMarkdownParserDefinition"/>
        <lang.refactoringSupport language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.language.MultiMarkdownRefactoringSupportProvider"/>
        <lang.syntaxHighlighterFactory key="MultiMarkdown" language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.highlighter.MultiMarkdownSyntaxHighlighterFactory"/>
        <langCodeStyleSettingsProvider implementation="com.vladsch.idea.multimarkdown.language.MultiMarkdownLanguageCodeStyleSettingsProvider"/>
        <psi.referenceContributor language="MultiMarkdown" implementation="com.vladsch.idea.multimarkdown.language.MultiMarkdownReferenceContributor"/>
        <spellchecker.support language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.spellchecking.MultiMarkdownSpellcheckingStrategy"/>
        <todoIndexer filetype="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.todo.MultiMarkdownTodoIndexer"/>
        <lang.elementManipulator forClass="com.vladsch.idea.multimarkdown.psi.MultiMarkdownNamedElement" implementationClass="com.vladsch.idea.multimarkdown.psi.impl.MultiMarkdownNamedElementManipulator"/>
        <fileIconProvider implementation="com.vladsch.idea.multimarkdown.MultiMarkdownFileIconProvider"/>
        <referencesSearch implementation="com.vladsch.idea.multimarkdown.language.MultiMarkdownReferenceSearch"/>
        <codeInsight.lineMarkerProvider language="MultiMarkdown" implementationClass="com.vladsch.idea.multimarkdown.language.MultiMarkdownLineMarkerProvider"/>
        <nameSuggestionProvider implementation="com.vladsch.idea.multimarkdown.language.ElementNameSuggestionProvider"/>
        <!--<renameHandler implementation="com.vladsch.idea.multimarkdown.language.TestRenameHandler"/>-->
    </extensions>
    <!-- @formatter:on -->
</idea-plugin>
